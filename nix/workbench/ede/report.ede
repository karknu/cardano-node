#+CONSTANTS:{% for sec in sections %} {{ sec.value.dataRef }}={{ sec.value.orgFile }} {% endfor %}
#+CONSTANTS: base=../{{ base.meta.tag }}/analysis
{% for run in runs %}
#+CONSTANTS: run{{ run.index }}=../{{ run.value.meta.tag }}/analysis
{% endfor %}
#+LATEX_CLASS: report
#+LATEX_CLASS_OPTIONS: [a4paper,7pt]
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}
#+latex_header: \usepackage{setspace}
#+latex_header: \onehalfspacing
#+LATEX_COMPILER: xelatex
#+EXPORT_FILE_NAME: {{ report.target }}.{{ base.workload }}.pdf
#+TITLE: {{ report.target }} against {{ base.ver }}
#+SUBTITLE: {{ base.workload }} workload
#+SUBTITLE: \break\small{revision} ={{ report.revision }}=
#+AUTHOR: {{ report.author }}, Cardano Performance team
#+DATE: {{ report.date }}

*** Manifest

We compare {% for run in runs %}{%if !run.first%}{%if !run.last%}, {%else%} and {%endif%}{%endif%}{{ run.value.ver }}/{{ run.value.meta.era | toTitle }}{% endfor %} relative to ={{ base.ver }}=/{{ base.meta.era | toTitle }}, under {{ base.workload }} workload.

{% include "manifest.ede" %}

***** Revision history
      - rev 1, {{ report.date }}:  initial release

*** Analysis
{% for sec in sections %}
***** {{ sec.value.title }}

{% include "table.ede" with table = sec.value %}

{% endfor %}

*** Observations
***** Resources

1. ...

***** Forging

1. ...

***** Peer propagation

1. ...

***** End-to-end propagation

...

@duncan, @Kevin Hammond, @Nigel Hemsley, @neil, @jared.corduan, @Damian, @nfrisby, @amesgen, @marcin, @Vitor Silva, @Javier Franco, @carlos.lopezdelara, @disasm, @michael.karg

* Appendix A: charts

*** Cluster performance charts

{% for m in dictionary.dClusterPerf %}
{%include "chart.ede" with args= { "title": m.value.deDescription, "metric": m.value.deField, "logscale": m.value.deLogScale, "yrange": m.value.deRange, "ylabel": m.value.deShortDesc + " " + m.value.deUnit }%}
    - {{ m.value.deShortDesc }} ({{ m.value.deField }}) :: {{ m.value.deDescription }}
{#
{%include "chart.ede" with args= { "title": "Kernel-reported CPU usage",           "metric": "CentiCpu",      "logscale": false, "yrange": "1:200", "ylabel": "CPU usage, %" }%}
{%include "chart.ede" with args= { "title": "RTS memory allocation rate",          "metric": "Alloc", "logscale": false, "yrange": "0:5000", "ylabel": "Memory allocation rate, MB/s" }%}
{%include "chart.ede" with args= { "title": "Kernel reported memory usage",        "metric": "RSS",        "logscale": false, "ylabel": "RSS, MB" }%}
{%include "chart.ede" with args= { "title": "RTS GC live bytes",                   "metric": "Live",  "logscale": false, "ylabel": "GC live bytes, MB" }%}
{%include "chart.ede" with args= { "title": "Single peer fetched-to-adopted time", "metric": "cdfPeerAdoptions",      "logscale": true }%}
{%include "chart.ede" with args= { "title": "First peer notice time",              "metric": "cdfPeerNotices",      "logscale": true }%}
{%include "chart.ede" with args= { "title": "Block adoption, 50% of cluster",      "metric": "cdf0.50",          "logscale": true }%}
{%include "chart.ede" with args= { "title": "Block adoption, 80% of cluster",      "metric": "cdf0.80",          "logscale": true }%}
{%include "chart.ede" with args= { "title": "Block adoption, 90% of cluster",      "metric": "cdf0.90",          "logscale": true }%}
{%include "chart.ede" with args= { "title": "Block adoption, 96% of cluster",      "metric": "cdf0.96",          "logscale": true }%}
#}

* Appendix B: data dictionary

*** Block propagation metrics
{% for m in dictionary.dBlockProp %}
    - {{ m.value.deShortDesc }} ({{ m.value.deField }}) :: {{ m.value.deDescription }}
{% endfor %}

*** Cluster performance metrics
{% for m in dictionary.dClusterPerf %}
    - {{ m.value.deShortDesc }} ({{ m.value.deField }}) :: {{ m.value.deDescription }}
{% endfor %}
